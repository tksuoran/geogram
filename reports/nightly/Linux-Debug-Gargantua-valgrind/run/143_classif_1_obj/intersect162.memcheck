<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.18.1-42b08ed5bd-20211015 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/bin/intersect remove_internal_shells=true /home/runner/work/geogram/geogram/tests/data/Intersections/classif_1.obj</line>
</preamble>

<pid>12123</pid>
<ppid>5579</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--verbose</arg>
    <arg>--xml=yes</arg>
    <arg>--leak-check=full</arg>
    <arg>--show-reachable=yes</arg>
    <arg>--error-limit=no</arg>
    <arg>--xml-file=intersect162.memcheck</arg>
    <arg>--suppressions=/home/runner/work/geogram/geogram/tools/valgrind.supp</arg>
  </vargv>
  <argv>
    <exe>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/bin/intersect</exe>
    <arg>remove_internal_shells=true</arg>
    <arg>/home/runner/work/geogram/geogram/tests/data/Intersections/classif_1.obj</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.026 </time>
</status>


<status>
  <state>FINISHED</state>
  <time>00:00:00:12.768 </time>
</status>

<error>
  <unique>0x3</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>320 bytes in 1 blocks are possibly lost in loss record 4 of 8</text>
    <leakedbytes>320</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x484DA83</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x40147D9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</obj>
      <fn>calloc</fn>
      <dir>./elf/../include</dir>
      <file>rtld-malloc.h</file>
      <line>44</line>
    </frame>
    <frame>
      <ip>0x40147D9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</obj>
      <fn>allocate_dtv</fn>
      <dir>./elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>375</line>
    </frame>
    <frame>
      <ip>0x40147D9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</obj>
      <fn>_dl_allocate_tls</fn>
      <dir>./elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>634</line>
    </frame>
    <frame>
      <ip>0x55467B4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc.so.6</obj>
      <fn>allocate_stack</fn>
      <dir>./nptl/./nptl</dir>
      <file>allocatestack.c</file>
      <line>430</line>
    </frame>
    <frame>
      <ip>0x55467B4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc.so.6</obj>
      <fn>pthread_create@@GLIBC_2.34</fn>
      <dir>./nptl/./nptl</dir>
      <file>pthread_create.c</file>
      <line>647</line>
    </frame>
    <frame>
      <ip>0x57E125F</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0</obj>
    </frame>
    <frame>
      <ip>0x57D7A10</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0</obj>
      <fn>GOMP_parallel</fn>
    </frame>
    <frame>
      <ip>0x4C17EA1</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>void __gnu_parallel::parallel_sort_mwms&lt;false, true, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}, unsigned short)</fn>
      <dir>/usr/include/c++/11/parallel</dir>
      <file>multiway_mergesort.h</file>
      <line>419</line>
    </frame>
    <frame>
      <ip>0x4C16BC2</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>void __gnu_parallel::__parallel_sort&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}, __gnu_parallel::multiway_mergesort_exact_tag)</fn>
      <dir>/usr/include/c++/11/parallel</dir>
      <file>sort.h</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4C15AA6</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>void __gnu_parallel::__parallel_sort&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}, __gnu_parallel::default_parallel_tag)</fn>
      <dir>/usr/include/c++/11/parallel</dir>
      <file>sort.h</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x4C1474C</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>void std::__parallel::sort&lt;__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}, __gnu_parallel::default_parallel_tag&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}, __gnu_parallel::default_parallel_tag)</fn>
      <dir>/usr/include/c++/11/parallel</dir>
      <file>algo.h</file>
      <line>1658</line>
    </frame>
    <frame>
      <ip>0x4C134E2</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>void std::__parallel::sort&lt;__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1})</fn>
      <dir>/usr/include/c++/11/parallel</dir>
      <file>algo.h</file>
      <line>1751</line>
    </frame>
    <frame>
      <ip>0x4C1269A</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>void GEO::sort&lt;__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt; const&amp;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1} const&amp;)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>algorithm.h</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x4C0AACE</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::MeshSurfaceIntersection::RadialBundles::initialize()</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/mesh</dir>
      <file>mesh_surface_intersection.cpp</file>
      <line>1409</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x4</unique>
  <tid>1</tid>
  <kind>Leak_IndirectlyLost</kind>
  <xwhat>
    <text>513 bytes in 1 blocks are indirectly lost in loss record 5 of 8</text>
    <leakedbytes>513</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x53B1724</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x53A7952</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int)</fn>
    </frame>
    <frame>
      <ip>0x53AF88A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, long)</fn>
    </frame>
    <frame>
      <ip>0x53A1B64</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long)</fn>
    </frame>
    <frame>
      <ip>0x53A1EBA</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x4A114AB</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::Logger::out(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>logger.cpp</file>
      <line>437</line>
    </frame>
    <frame>
      <ip>0x4C047AC</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned long, unsigned long)#2}::operator()(unsigned long, unsigned long) const</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/mesh</dir>
      <file>mesh_surface_intersection.cpp</file>
      <line>647</line>
    </frame>
    <frame>
      <ip>0x4C157E8</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>void std::__invoke_impl&lt;void, GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned long, unsigned long)#2}&amp;, unsigned long, unsigned long&gt;(std::__invoke_other, GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned long, unsigned long)#2}&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x4C14346</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::enable_if&lt;is_invocable_r_v&lt;void, GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned long, unsigned long)#2}&amp;, unsigned long, unsigned long&gt;, void&gt;::type std::__invoke_r&lt;void, GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned long, unsigned long)#2}&amp;, unsigned long, unsigned long&gt;(GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned long, unsigned long)#2}&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x4C13211</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::_Function_handler&lt;void (unsigned long, unsigned long), GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned long, unsigned long)#2}&gt;::_M_invoke(std::_Any_data const&amp;, unsigned long&amp;&amp;, unsigned long&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>std_function.h</file>
      <line>290</line>
    </frame>
    <frame>
      <ip>0x4A20639</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::function&lt;void (unsigned long, unsigned long)&gt;::operator()(unsigned long, unsigned long) const</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>std_function.h</file>
      <line>590</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x5</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>625 (112 direct, 513 indirect) bytes in 1 blocks are definitely lost in loss record 6 of 8</text>
    <leakedbytes>625</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4A0EF3B</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>(anonymous namespace)::CERRStream::CERRStream()</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>logger.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x4A10FA8</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::Logger::Logger()</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>logger.cpp</file>
      <line>396</line>
    </frame>
    <frame>
      <ip>0x4A100E6</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::Logger::initialize()</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>logger.cpp</file>
      <line>226</line>
    </frame>
    <frame>
      <ip>0x49B9394</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::(anonymous namespace)::GeogramLibSingleton::GeogramLibSingleton(int)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>common.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x49B8FBF</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::_Optional_payload_base&lt;GEO::(anonymous namespace)::GeogramLibSingleton&gt;::_Storage&lt;GEO::(anonymous namespace)::GeogramLibSingleton, false&gt;::_Storage&lt;int&amp;&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>optional</file>
      <line>226</line>
    </frame>
    <frame>
      <ip>0x49B9016</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::_Optional_payload_base&lt;GEO::(anonymous namespace)::GeogramLibSingleton&gt;::_Optional_payload_base&lt;int&amp;&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>optional</file>
      <line>117</line>
    </frame>
    <frame>
      <ip>0x49B8E8D</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::_Optional_payload&lt;GEO::(anonymous namespace)::GeogramLibSingleton, true, false, false&gt;::_Optional_payload_base&lt;int&amp;&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>optional</file>
      <line>359</line>
    </frame>
    <frame>
      <ip>0x49B8F15</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::_Optional_payload&lt;GEO::(anonymous namespace)::GeogramLibSingleton, false, false, false&gt;::_Optional_payload_base&lt;int&amp;&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>optional</file>
      <line>393</line>
    </frame>
    <frame>
      <ip>0x49B8F68</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::_Optional_base&lt;GEO::(anonymous namespace)::GeogramLibSingleton, false, false&gt;::_Optional_base&lt;int&amp;, false&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>optional</file>
      <line>483</line>
    </frame>
    <frame>
      <ip>0x49B8E02</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::optional&lt;GEO::(anonymous namespace)::GeogramLibSingleton&gt;::optional&lt;int&amp;, true&gt;(int&amp;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>optional</file>
      <line>706</line>
    </frame>
    <frame>
      <ip>0x49B90DC</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::(anonymous namespace)::GeogramLibSingleton::instance(int)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>common.cpp</file>
      <line>79</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x6</unique>
  <tid>1</tid>
  <kind>Leak_PossiblyLost</kind>
  <xwhat>
    <text>640 bytes in 2 blocks are possibly lost in loss record 7 of 8</text>
    <leakedbytes>640</leakedbytes>
    <leakedblocks>2</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x484DA83</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>calloc</fn>
    </frame>
    <frame>
      <ip>0x40147D9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</obj>
      <fn>calloc</fn>
      <dir>./elf/../include</dir>
      <file>rtld-malloc.h</file>
      <line>44</line>
    </frame>
    <frame>
      <ip>0x40147D9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</obj>
      <fn>allocate_dtv</fn>
      <dir>./elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>375</line>
    </frame>
    <frame>
      <ip>0x40147D9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/ld-linux-x86-64.so.2</obj>
      <fn>_dl_allocate_tls</fn>
      <dir>./elf/../elf</dir>
      <file>dl-tls.c</file>
      <line>634</line>
    </frame>
    <frame>
      <ip>0x55467B4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc.so.6</obj>
      <fn>allocate_stack</fn>
      <dir>./nptl/./nptl</dir>
      <file>allocatestack.c</file>
      <line>430</line>
    </frame>
    <frame>
      <ip>0x55467B4</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libc.so.6</obj>
      <fn>pthread_create@@GLIBC_2.34</fn>
      <dir>./nptl/./nptl</dir>
      <file>pthread_create.c</file>
      <line>647</line>
    </frame>
    <frame>
      <ip>0x4A2245F</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>(anonymous namespace)::PThreadManager::run_concurrent_threads(std::vector&lt;GEO::SmartPointer&lt;GEO::Thread&gt;, std::allocator&lt;GEO::SmartPointer&lt;GEO::Thread&gt; &gt; &gt;&amp;, unsigned long)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>process_unix.cpp</file>
      <line>196</line>
    </frame>
    <frame>
      <ip>0x4A1C7A4</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::ThreadManager::run_threads(std::vector&lt;GEO::SmartPointer&lt;GEO::Thread&gt;, std::allocator&lt;GEO::SmartPointer&lt;GEO::Thread&gt; &gt; &gt;&amp;)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>process.cpp</file>
      <line>321</line>
    </frame>
    <frame>
      <ip>0x4A1D23A</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::Process::run_threads(std::vector&lt;GEO::SmartPointer&lt;GEO::Thread&gt;, std::allocator&lt;GEO::SmartPointer&lt;GEO::Thread&gt; &gt; &gt;&amp;)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>process.cpp</file>
      <line>473</line>
    </frame>
    <frame>
      <ip>0x4A1E2BF</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::parallel_for(unsigned long, unsigned long, std::function&lt;void (unsigned long)&gt;, unsigned long, bool)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>process.cpp</file>
      <line>756</line>
    </frame>
    <frame>
      <ip>0x4C05EBE</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::MeshSurfaceIntersection::intersect_epilogue(GEO::vector&lt;GEO::IsectInfo&gt; const&amp;)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/mesh</dir>
      <file>mesh_surface_intersection.cpp</file>
      <line>751</line>
    </frame>
    <frame>
      <ip>0x4C06C26</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::MeshSurfaceIntersection::intersect()</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/mesh</dir>
      <file>mesh_surface_intersection.cpp</file>
      <line>905</line>
    </frame>
    <frame>
      <ip>0x10DA47</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/bin/intersect</obj>
      <fn>main</fn>
      <dir>/home/runner/work/geogram/geogram/src/examples/geogram/intersect</dir>
      <file>main.cpp</file>
      <line>156</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x7</unique>
  <tid>1</tid>
  <kind>Leak_StillReachable</kind>
  <xwhat>
    <text>2,240 bytes in 1 blocks are still reachable in loss record 8 of 8</text>
    <leakedbytes>2240</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x484E120</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>memalign</fn>
    </frame>
    <frame>
      <ip>0x57D08E8</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0</obj>
    </frame>
    <frame>
      <ip>0x57E0C96</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0</obj>
    </frame>
    <frame>
      <ip>0x57D79F9</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libgomp.so.1.0.0</obj>
      <fn>GOMP_parallel</fn>
    </frame>
    <frame>
      <ip>0x4C17EA1</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>void __gnu_parallel::parallel_sort_mwms&lt;false, true, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}, unsigned short)</fn>
      <dir>/usr/include/c++/11/parallel</dir>
      <file>multiway_mergesort.h</file>
      <line>419</line>
    </frame>
    <frame>
      <ip>0x4C16BC2</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>void __gnu_parallel::__parallel_sort&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}, __gnu_parallel::multiway_mergesort_exact_tag)</fn>
      <dir>/usr/include/c++/11/parallel</dir>
      <file>sort.h</file>
      <line>106</line>
    </frame>
    <frame>
      <ip>0x4C15AA6</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>void __gnu_parallel::__parallel_sort&lt;false, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}, __gnu_parallel::default_parallel_tag)</fn>
      <dir>/usr/include/c++/11/parallel</dir>
      <file>sort.h</file>
      <line>189</line>
    </frame>
    <frame>
      <ip>0x4C1474C</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>void std::__parallel::sort&lt;__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}, __gnu_parallel::default_parallel_tag&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}, __gnu_parallel::default_parallel_tag)</fn>
      <dir>/usr/include/c++/11/parallel</dir>
      <file>algo.h</file>
      <line>1658</line>
    </frame>
    <frame>
      <ip>0x4C134E2</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>void std::__parallel::sort&lt;__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1})</fn>
      <dir>/usr/include/c++/11/parallel</dir>
      <file>algo.h</file>
      <line>1751</line>
    </frame>
    <frame>
      <ip>0x4C1269A</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>void GEO::sort&lt;__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1}&gt;(__gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt; const&amp;, __gnu_cxx::__normal_iterator&lt;unsigned long*, std::vector&lt;unsigned long, GEO::Memory::aligned_allocator&lt;unsigned long, 64&gt; &gt; &gt; const&amp;, GEO::MeshSurfaceIntersection::RadialBundles::initialize()::{lambda(unsigned long, unsigned long)#1} const&amp;)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>algorithm.h</file>
      <line>131</line>
    </frame>
    <frame>
      <ip>0x4C0AACE</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::MeshSurfaceIntersection::RadialBundles::initialize()</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/mesh</dir>
      <file>mesh_surface_intersection.cpp</file>
      <line>1409</line>
    </frame>
    <frame>
      <ip>0x4C09B81</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::MeshSurfaceIntersection::build_Weiler_model()</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/mesh</dir>
      <file>mesh_surface_intersection.cpp</file>
      <line>1309</line>
    </frame>
  </stack>
</error>

<errorcounts>
</errorcounts>

<suppcounts>
  <pair>
    <count>3</count>
    <name>Vorpaline_gomp_64bits_leak_2</name>
  </pair>
</suppcounts>

</valgrindoutput>

