<?xml version="1.0"?>

<valgrindoutput>

<protocolversion>4</protocolversion>
<protocoltool>memcheck</protocoltool>

<preamble>
  <line>Memcheck, a memory error detector</line>
  <line>Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.</line>
  <line>Using Valgrind-3.18.1-42b08ed5bd-20211015 and LibVEX; rerun with -h for copyright info</line>
  <line>Command: /home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/bin/intersect remove_internal_shells=true /home/runner/work/geogram/geogram/tests/data/Intersections/two_cubes_1.obj</line>
</preamble>

<pid>18283</pid>
<ppid>11162</ppid>
<tool>memcheck</tool>

<args>
  <vargv>
    <exe>/usr/bin/valgrind.bin</exe>
    <arg>--verbose</arg>
    <arg>--xml=yes</arg>
    <arg>--leak-check=full</arg>
    <arg>--show-reachable=yes</arg>
    <arg>--error-limit=no</arg>
    <arg>--xml-file=intersect184.memcheck</arg>
    <arg>--suppressions=/home/runner/work/geogram/geogram/tools/valgrind.supp</arg>
  </vargv>
  <argv>
    <exe>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/bin/intersect</exe>
    <arg>remove_internal_shells=true</arg>
    <arg>/home/runner/work/geogram/geogram/tests/data/Intersections/two_cubes_1.obj</arg>
  </argv>
</args>

<status>
  <state>RUNNING</state>
  <time>00:00:00:00.025 </time>
</status>


<status>
  <state>FINISHED</state>
  <time>00:00:00:04.412 </time>
</status>

<error>
  <unique>0x1</unique>
  <tid>1</tid>
  <kind>Leak_IndirectlyLost</kind>
  <xwhat>
    <text>513 bytes in 1 blocks are indirectly lost in loss record 2 of 3</text>
    <leakedbytes>513</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x54D0724</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::reserve(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x54C6952</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::__cxx11::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::overflow(int)</fn>
    </frame>
    <frame>
      <ip>0x54CE88A</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn(char const*, long)</fn>
    </frame>
    <frame>
      <ip>0x54C0B64</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*, long)</fn>
    </frame>
    <frame>
      <ip>0x54C0EBA</ip>
      <obj>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.30</obj>
      <fn>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::operator&lt;&lt; &lt;std::char_traits&lt;char&gt; &gt;(std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;&amp;, char const*)</fn>
    </frame>
    <frame>
      <ip>0x4A20B66</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::Logger::out(std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>logger.cpp</file>
      <line>437</line>
    </frame>
    <frame>
      <ip>0x4C1166D</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned int, unsigned int)#2}::operator()(unsigned int, unsigned int) const</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/mesh</dir>
      <file>mesh_surface_intersection.cpp</file>
      <line>647</line>
    </frame>
    <frame>
      <ip>0x4C21EE2</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>void std::__invoke_impl&lt;void, GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned int, unsigned int)#2}&amp;, unsigned int, unsigned int&gt;(std::__invoke_other, GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned int, unsigned int)#2}&amp;, unsigned int&amp;&amp;, unsigned int&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>61</line>
    </frame>
    <frame>
      <ip>0x4C20A4C</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::enable_if&lt;is_invocable_r_v&lt;void, GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned int, unsigned int)#2}&amp;, unsigned int, unsigned int&gt;, void&gt;::type std::__invoke_r&lt;void, GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned int, unsigned int)#2}&amp;, unsigned int, unsigned int&gt;(GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned int, unsigned int)#2}&amp;, unsigned int&amp;&amp;, unsigned int&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>invoke.h</file>
      <line>111</line>
    </frame>
    <frame>
      <ip>0x4C1F917</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::_Function_handler&lt;void (unsigned int, unsigned int), GEO::MeshSurfaceIntersection::intersect_remesh_intersections(GEO::vector&lt;GEO::IsectInfo&gt;&amp;)::{lambda(unsigned int, unsigned int)#2}&gt;::_M_invoke(std::_Any_data const&amp;, unsigned int&amp;&amp;, unsigned int&amp;&amp;)</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>std_function.h</file>
      <line>290</line>
    </frame>
    <frame>
      <ip>0x4A2FA69</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::function&lt;void (unsigned int, unsigned int)&gt;::operator()(unsigned int, unsigned int) const</fn>
      <dir>/usr/include/c++/11/bits</dir>
      <file>std_function.h</file>
      <line>590</line>
    </frame>
  </stack>
</error>

<error>
  <unique>0x2</unique>
  <tid>1</tid>
  <kind>Leak_DefinitelyLost</kind>
  <xwhat>
    <text>625 (112 direct, 513 indirect) bytes in 1 blocks are definitely lost in loss record 3 of 3</text>
    <leakedbytes>625</leakedbytes>
    <leakedblocks>1</leakedblocks>
  </xwhat>
  <stack>
    <frame>
      <ip>0x4849013</ip>
      <obj>/usr/libexec/valgrind/vgpreload_memcheck-amd64-linux.so</obj>
      <fn>operator new(unsigned long)</fn>
    </frame>
    <frame>
      <ip>0x4A1E5F9</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>(anonymous namespace)::CERRStream::CERRStream()</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>logger.cpp</file>
      <line>75</line>
    </frame>
    <frame>
      <ip>0x4A20665</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::Logger::Logger()</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>logger.cpp</file>
      <line>396</line>
    </frame>
    <frame>
      <ip>0x4A1F7A4</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::Logger::initialize()</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>logger.cpp</file>
      <line>226</line>
    </frame>
    <frame>
      <ip>0x49D1B54</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::(anonymous namespace)::GeogramLibSingleton::GeogramLibSingleton(int)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>common.cpp</file>
      <line>104</line>
    </frame>
    <frame>
      <ip>0x49D177F</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::_Optional_payload_base&lt;GEO::(anonymous namespace)::GeogramLibSingleton&gt;::_Storage&lt;GEO::(anonymous namespace)::GeogramLibSingleton, false&gt;::_Storage&lt;int&amp;&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>optional</file>
      <line>226</line>
    </frame>
    <frame>
      <ip>0x49D17D6</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::_Optional_payload_base&lt;GEO::(anonymous namespace)::GeogramLibSingleton&gt;::_Optional_payload_base&lt;int&amp;&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>optional</file>
      <line>117</line>
    </frame>
    <frame>
      <ip>0x49D164D</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::_Optional_payload&lt;GEO::(anonymous namespace)::GeogramLibSingleton, true, false, false&gt;::_Optional_payload_base&lt;int&amp;&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>optional</file>
      <line>359</line>
    </frame>
    <frame>
      <ip>0x49D16D5</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::_Optional_payload&lt;GEO::(anonymous namespace)::GeogramLibSingleton, false, false, false&gt;::_Optional_payload_base&lt;int&amp;&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>optional</file>
      <line>393</line>
    </frame>
    <frame>
      <ip>0x49D1728</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::_Optional_base&lt;GEO::(anonymous namespace)::GeogramLibSingleton, false, false&gt;::_Optional_base&lt;int&amp;, false&gt;(std::in_place_t, int&amp;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>optional</file>
      <line>483</line>
    </frame>
    <frame>
      <ip>0x49D15C2</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>std::optional&lt;GEO::(anonymous namespace)::GeogramLibSingleton&gt;::optional&lt;int&amp;, true&gt;(int&amp;)</fn>
      <dir>/usr/include/c++/11</dir>
      <file>optional</file>
      <line>706</line>
    </frame>
    <frame>
      <ip>0x49D189C</ip>
      <obj>/home/runner/work/geogram/geogram/build/Linux64-gcc-dynamic-Debug/lib/libgeogram.so.1.9.5-rc</obj>
      <fn>GEO::(anonymous namespace)::GeogramLibSingleton::instance(int)</fn>
      <dir>/home/runner/work/geogram/geogram/src/lib/geogram/basic</dir>
      <file>common.cpp</file>
      <line>79</line>
    </frame>
  </stack>
</error>

<errorcounts>
</errorcounts>

<suppcounts>
  <pair>
    <count>1</count>
    <name>Vorpaline_gomp_64bits_leak_2</name>
  </pair>
</suppcounts>

</valgrindoutput>

